class Solution {
public:
    bool isValid(string str,int n)
    {
        stack<char>st;
        for(int i=0;i<n;i++)
        {
            if(st.empty()||str[i]=='(')
                st.push(str[i]);
            else if(str[i]==')'&&st.top()=='(')
            {
               st.pop();
            }
        }
        if(st.size()==0)
            return true;
        return false;
    }
    vector<string> generateParenthesis(int n) {
        string str="";
        for(int i=0;i<n;i++)
        {
            str+="(";
            str+=")";
        }
        sort(str.begin(),str.end());
        set<string>s;
        do
        {
            if(isValid(str,2*n))
                s.insert(str);
        }while(next_permutation(str.begin(),str.end()));
       
        vector<string>ans;
        for(auto it:s)
        {
            ans.push_back(it);
        }
        return ans;
    }
};
